name: Serverless Branch Deployments
on:
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  # Cancel in-progress deploys to same branch
  group: ${{ github.ref }}/branch_deployments
  cancel-in-progress: true
env:
  DAGSTER_CLOUD_URL: "http://centre-for-ai-and-climate.dagster.cloud"
  DAGSTER_CLOUD_API_TOKEN: ${{ secrets.DAGSTER_CLOUD_API_TOKEN }}
  ENABLE_FAST_DEPLOYS: 'true'
  DAGSTER_CLOUD_FILE: 'dagster_cloud.yaml'
jobs:
  lint:
    uses: ./.github/workflows/lint.yml

  tests:
    needs: lint
    uses: ./.github/workflows/test.yml

  dagster_cloud_default_deploy:
    name: Dagster Serverless Deploy
    needs: tests
    runs-on: ubuntu-20.04

    steps:
      - name: Prerun Checks
        id: prerun
        uses: dagster-io/dagster-cloud-action/actions/utils/prerun@v0.1

      - name: Checkout for Python Executable Deploy
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          path: project-repo

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "project-repo/uv.lock"

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "project-repo/.python-version"

      - name: "Store Python version"
        run: |
          python_version=$(cat project-repo/.python-version)
          echo "PYTHON_VERSION=$python_version" >> $GITHUB_ENV

      - name: "Compile requirements.txt"
        run: uv pip compile "project-repo/pyproject.toml" -o "project-repo/requirements.txt"

      - name: Python Executable Deploy
        uses: dagster-io/dagster-cloud-action/actions/build_deploy_python_executable@v0.1
        with:
          dagster_cloud_file: "$GITHUB_WORKSPACE/project-repo/$DAGSTER_CLOUD_FILE"
          build_output_dir: "$GITHUB_WORKSPACE/build"
          python_version: ${{ env.PYTHON_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
